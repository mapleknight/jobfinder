<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<!-- In Tomcat 7 and other servlet 3.0 containers, you can use @WebServlet("/urlPattern") 
		in the Java source code instead of using the servlet and servlet-mapping 
		tags here. In fact, the ENTIRE web.xml file can be totally omitted with servlets 
		3.0. But, I put a small one here for two reasons. First, to show that you 
		can still define URL patterns the old way. Second, because when you make 
		a new Dynamic Web Project in Eclipse using the Tomcat 7 configuration, Eclipse 
		totally omits the web.xml file, and has no option to insert it for you. So, 
		already having a small web.xml with the legal syntax is helpful in case you 
		want to use some of the standard web.xml entries instead of annotations. 
		More details: - Tomcat 7 and Eclipse tutorial: http://www.coreservlets.com/Apache-Tomcat-Tutorial/tomcat-7-with-eclipse.html 
		- Servlet and JSP programming tutorials: http://courses.coreservlets.com/Course-Materials/csajsp2.html -->

	<!-- Use the URL http://hostName/appName/test2 for testPackage.TestServlet -->

	<servlet>
		<servlet-name>SignInServlet</servlet-name>
		<servlet-class>com.jobfinder.servlet.SignInServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SignInServlet</servlet-name>
		<url-pattern>/signin</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>SignOnServlet</servlet-name>
		<servlet-class>com.jobfinder.servlet.SignOnServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SignOnServlet</servlet-name>
		<url-pattern>/signon</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>JobSearchListServlet</servlet-name>
		<servlet-class>com.jobfinder.servlet.JobSearchListServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>JobSearchListServlet</servlet-name>
		<url-pattern>/jobs</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>JobSearchServlet</servlet-name>
		<servlet-class>com.jobfinder.servlet.JobSearchServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>JobSearchServlet</servlet-name>
		<url-pattern>/job</url-pattern>
	</servlet-mapping>
</web-app>